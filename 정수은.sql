-- USERS
-- 회원 탈퇴
DELETE FROM USERS
WHERE ID = 1;
 
-- 회원 정보 조회 
SELECT
	USER_NAME,
    USER_ID,
    USER_PASSWORD,
    USER_PHONE,
    USER_ADDRESS,
    USER_ADDRESS_DETAIL,
    USER_EMAIL,
    USER_PROFILE_IMAGE_URL
FROM USERS
WHERE ID = 1;

-- 회원 정보 수정
UPDATE USERS
SET
	USER_PASSWORD = 'qweasdzxc123',
    USER_PHONE = '01078907890',
    USER_ADDRESS = '부산시 연제구',
    USER_ADDRESS_DETAIL = '랄랄라아파트',
    USER_EMAIL = 'qwe123@nate.com',
    USER_PROFILE_IMAGE_URL = NULL
WHERE ID = 1;
    
-- 강아지 프로필 
-- 강아지 프로필 등록
INSERT INTO PET_PROFILES (
	ID,
	PET_PROFILE_NAME,
    PET_PROFILE_GENDER,
    PET_PROFILE_BIRTH_DATE,
    PET_PROFILE_WEIGHT,
    PET_PROFILE_IMAGE_URL,
    PET_PROFILE_ADD_INFO,
    PET_PROFILE_NEUTRALITY_YN,
    PET_CREATE_AT
) VALUES (
	1,
	'쪼꼬',
    '0',
    '201211',
    5,
    NULL,
    NULL,
    '0',
    NOW()
);

-- 강아지 프로필 조회 (전체): 사용자가 등록한 강아지 목록 조회
SELECT
	PET_PROFILE_NAME,
    PET_PROFILE_IMAGE_URL
FROM PET_PROFILES
WHERE ID = 1;

-- 강아지 프로필 조회 (상세): 사용자가 등록한 강아지 중 1마리에 대한 상세 조회
SELECT
	PET_PROFILE_NAME,
	PET_PROFILE_GENDER,
	PET_PROFILE_BIRTH_DATE,
	PET_PROFILE_WEIGHT,
	PET_PROFILE_IMAGE_URL,
	PET_PROFILE_ADD_INFO,
	PET_PROFILE_NEUTRALITY_YN
FROM PET_PROFILES
WHERE ID = 1 AND PET_PROFILE_ID = 1;

-- 강아지 프로필 수정: 사용자가 등록한 강아지 중 1마리에 대한 수정
UPDATE PET_PROFILES
SET
	PET_PROFILE_NAME = '쪼꼬',
	PET_PROFILE_BIRTH_DATE = '201211',
	PET_PROFILE_WEIGHT = 4,
	PET_PROFILE_IMAGE_URL = NULL,
	PET_PROFILE_ADD_INFO = 'cute',
	PET_PROFILE_NEUTRALITY_YN = '0'
WHERE ID = 1 AND PET_PROFILE_ID = 1;

-- 강아지 프로필 삭제: 강아지가 등록한 강아지 중 1마리에 대한 삭제
DELETE FROM PET_PROFILES
WHERE ID = 1 AND PET_PROFILE_ID = 1;

-- 산책 기록
-- 산책 기록 등록 
INSERT INTO WALKING_RECORDS (
	PET_PROFILE_ID,
	WEATHER_STATE,
    WALKING_RECORD_DISTANCE,
    WALKING_RECORD_WALKING_TIME,
    WALKING_RECORD_CREATE_TIME,
    WALKING_RECORD_CREATE_AT,
    WALKING_RECORD_MEMO,
    WALKING_RECORD_IMAGE_URL
) VALUES (
	1,
	0,
	10,
    '00:30:00',
    '2024-12-11',
    NOW(),
    '산책!',
    NULL
);

-- 산책 기록 조회 (전체): 사용자가 등록한 강아지 중 1마리에 대한 산책 기록 목록 전체 조회 
SELECT 
	P.PET_PROFILE_IMAGE_URL,
    W.WALKING_RECORD_WALKING_TIME,
    W.WALKING_RECORD_DISTANCE
FROM WALKING_RECORDS W
JOIN PET_PROFILES P ON W.PET_PROFILE_ID = P.PET_PROFILES
WHERE PET_PROFILE_ID = 1;


-- 산책 기록 조회 (단건): 사용자가 등록한 강아지 중 1마리에 대한 산책 기록 상세 조회
SELECT 
	P.PET_PROFILE_IMAGE_URL,
	W.WALKING_RECORD_WEATHER_STATE,
	W.WALKING_RECORD_DISTANCE,
	W.WALKING_RECORD_WALKING_TIME,
    W>WALKING_RECORD_CREATE_TIME,
	W.WALKING_RECORD_CREATE_AT,
	W.WALKING_RECORD_MEMO,
	W.WALKING_RECORD_IMAGE_URL
FROM WALKING_RECORDS W
JOIN PET_PROFILES P ON W.PET_PROFILE_ID = P.PET_PROFILES
WHERE PET_PROFILE_ID = 1 AND WALKING_RECORD_ID = 1;

-- 산책 기록 삭제: 사용자가 등록한 강아지 중 1마리에 대한 산책 기록 상세 조회
DELETE FROM WALKING_RECORDS
WHERE PET_PROFILE_ID = 1 AND WALKING_RECORD_ID = 1;

-- 댕시터 등록: 댕시터로 등록한 적이 있는 사용자는 재등록 불가 
INSERT IGNORE INTO PROVIDERS (
	ID,
    PROVIDER_INTRODUCTION,
    PROVIDER_PROVISION_YN,
    MON, TUE, WED, THU, FRI, SAT, SUN,
	PROVIDER_PROVISION_OPTION
) VALUES (
	1,
	'쪼꼬맘임다',
	1,
    0, 1, 1, 1, 1, 1, 0,
    'WALK'
);

-- 댕시터 조회 (남이 볼 때): 다른 사용자가 조회할 수 있는 댕시터의 프로필 상세 페이지
SELECT 
    U.USER_NICK_NAME,
    U.USER_ID,
    P.PROVIDER_INTRODUCTION,
    P.MON, P.TUE, P.WED, P.THU, P.FRI, P.SAT, P.SUN,
    P.PROVIDER_PROVISION_OPTION,
    FLOOR(IFNULL(AVG(r.REVIEW_SCORE), 0)) AS avg_score,
    (SELECT U2.USER_NICK_NAME 
     FROM REVIEWS R2
     JOIN USERS U2 ON R2.ID = U2.ID 
     WHERE R2.PROVIDER_ID = P.PROVIDER_ID 
     ORDER BY R2.REVIEW_ID DESC 
     LIMIT 1) AS recent_reviewer_nickname,
     (SELECT U2.USER_ID 
     FROM REVIEWS R2
     JOIN USERS U2 ON R2.ID = U2.ID 
     WHERE R2.PROVIDER_ID = P.PROVIDER_ID 
     ORDER BY R2.REVIEW_ID DESC 
     LIMIT 1) AS recent_reviewer_id,
     (SELECT R2.REVIEW_SCORE 
     FROM REVIEWS R2 
     WHERE R2.PROVIDER_ID = P.PROVIDER_ID 
     ORDER BY R2.REVIEW_ID DESC 
     LIMIT 1) AS recent_review_score,
    (SELECT R2.REVIEW_CONTENT 
     FROM REVIEWS R2 
     WHERE R2.PROVIDER_ID = P.PROVIDER_ID 
     ORDER BY R2.REVIEW_ID DESC 
     LIMIT 1) AS recent_review_content
FROM 
    PROVIDERS P
JOIN 
    USERS U ON P.ID = U.ID
LEFT JOIN 
    REVIEWS R ON P.PROVIDER_ID = R.PROVIDER_ID
WHERE P.PROVIDER_ID = 1
GROUP BY 
    P.PROVIDER_ID, U.USER_NICK_NAME, U.USER_ID, P.PROVIDER_INTRODUCTION, 
    P.MON, P.TUE, P.WED, P.THU, P.FRI, P.SAT, P.SUN, P.PROVIDER_PROVISION_OPTION;

-- 댕시터 조회 (내가 볼 때): 다른 사용자는 볼 수 없고 댕시터 본인만 확인 및 수정이 가능한 댕시터의 프로필 페이지
SELECT
	P.PROVIDER_PROVISION_YN,
	P.MON, P.TUE, P.WED, P.THU, P.FRI, P.SAT, P.SUN,
    P.PROVIDER_PROVISION_OPTION,
    P.PROVIDER_INTRODUCTION
FROM PROVIDERS P
JOIN USERS U ON P.ID = U.ID
WHERE P.ID = 1;

-- 댕시터 수정: 다른 사용자는 볼 수 없고 댕시터 본인만 확인 및 수정이 가능한 댕시터의 프로필 페이지 수정
UPDATE PROVIDERS P
JOIN USERS U ON P.ID = U.ID
SET 
    PROVIDER_PROVISION_YN = 0,
    MON = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 1 END,
    TUE = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 1 END,
    WED = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 0 END,
    THU = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 1 END,
    FRI = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 0 END,
    SAT = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 0 END,
    SUN = CASE WHEN PROVIDER_PROVISION_YN = 0 THEN 0 ELSE 0 END,
    PROVIDER_PROVISION_OPTION = 'WALK',
    PROVIDER_INTRODUCTION = '쪼꼬맘'
WHERE P.ID = 1;

-- 제공 목록 조회
SELECT
	R.RESERVATION_LIST_START_DATE,
    R.RESERVATION_LIST_END_DATE,
    R.RESERVATION_LIST_STATUS,
    U.USER_NICK_NAME,
    P.PET_PROFILE_NAME
    -- 금액 추가해야함 
FROM RESERVATION_LISTS R
JOIN USERS U ON R.ID = U.ID
JOIN PET_PROFILES P ON R.PET_PROFILE_ID = P.PET_PROFILE_ID
WHERE PROVIDER_ID;

-- 제공 목록 조회 (상세)

-- 날짜 범위 내 예약 목록 조회
SELECT 
	RESERVATION_LIST_START_DATE,
    R.RESERVATION_LIST_END_DATE,
    R.RESERVATION_LIST_STATUS,
    U.USER_NICK_NAME,
    P.PET_PROFILE_NAME
FROM RESERVATION_LISTS
WHERE R.RESERVATION_LIST_START_DATE BETWEEN '2024-01-01' AND '2024-12-31';



    
    




